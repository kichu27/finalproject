Sure, here are some ideas for features you can implement in the admin page of a beginner MERN (MongoDB, Express.js, React.js, Node.js) website that sells courses:

1. **Course Management:**
   - Add, edit, and delete courses.
   - Include fields such as course title, description, price, duration, and category.

2. **Category Management:**
   - Allow admins to create, edit, and delete course categories.
   - Assign courses to specific categories.

3. **User Management:**
   - View and manage user accounts.
   - Enable/disable user accounts.
   - View user details and purchase history.

4. **Order Management:**
   - View and manage customer orders.
   - Process orders, mark them as shipped, or cancel them.
   - View order details and customer information.

5. **Dashboard and Analytics:**
   - Create a dashboard with key metrics (e.g., total sales, number of courses sold, popular courses).
   - Implement analytics to track user behavior and sales performance.

6. **Content Management System (CMS):**
   - Allow admins to manage static content on the website (e.g., homepage banners, about us section).

7. **Discounts and Coupons:**
   - Implement a system for creating discounts or coupon codes for specific courses or categories.
   - Set expiration dates for discounts.

8. **User Feedback and Reviews:**
   - View and moderate user reviews for courses.
   - Provide the ability to respond to user reviews.

9. **Reporting:**
   - Generate reports on sales, user activity, and popular courses.
   - Export reports in different formats (CSV, PDF).

10. **Notifications:**
    - Implement a notification system for admins to receive alerts about new orders, user registrations, or other important events.

11. **Settings:**
    - Allow admins to configure general settings for the website (e.g., currency, tax rates).

12. **Security:**
    - Implement role-based access control to restrict access to certain features based on user roles (admin, moderator).
    - Log admin actions for security and auditing purposes.

Remember to design the admin page with a user-friendly interface and prioritize essential features for effective management. Additionally, consider implementing proper authentication and authorization mechanisms to secure the admin functionality.
